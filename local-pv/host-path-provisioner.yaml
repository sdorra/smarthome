---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: host-path-provisioner
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: host-path-provisioner-cluster-role
  namespace: kube-system
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get"]
  - apiGroups: ["extensions"]
    resources: ["podsecuritypolicies"]
    resourceNames: ["nfs-provisioner"]
    verbs: ["use"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: host-path-provisioner-cluster-role
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: host-path-provisioner
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: host-path-provisioner-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: host-path-provisioner-role
  namespace: kube-system
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: host-path-provisioner-role
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: host-path-provisioner
    namespace: kube-system
roleRef:
  kind: Role
  name: host-path-provisioner-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: host-path-provisioner
  namespace: kube-system
  labels:
    app: host-path-provisioner
spec:
  selector:
    matchLabels:
      app: host-path-provisioner
  template:
    metadata:
      labels:
        app: host-path-provisioner
    spec:
      serviceAccountName: host-path-provisioner
      containers:
      - name: host-path-provisioner
        image: sdorra/host-path-provisioner:0.0.3
        command: ["/bin/host-path-provisioner"]
        args: ["-directory", "/var/lib/kubelet/host-path-provisioner-volumes"]
        imagePullPolicy: "Always"
        resources:
          limits:
            memory: "64Mi"
            cpu: "200m"
        volumeMounts:
        - mountPath: /var/lib/kubelet/host-path-provisioner-volumes
          name: host-path-provisioner-volume
      volumes:
      - name: host-path-provisioner-volume
        hostPath:
          path: /var/lib/kubelet/host-path-provisioner-volumes
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: default
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: sdorra.org/host-path
